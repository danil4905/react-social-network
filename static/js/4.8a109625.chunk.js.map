{"version":3,"sources":["components/dialogs/dialogs.module.css","components/dialogs/Dialogs.jsx","hoc/withAuthRedirectComponent.jsx","components/dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","path","id","className","classes","dialog","to","name","Message","message","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","newMessage","autoFocus","btn","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","wrapper","dialogsItems","recentMessages","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,IAAM,uB,iHCItPC,EAAc,SAAAC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAWC,IAAQC,QACtB,kBAAC,IAAD,CAASC,GAAIL,GAAOD,EAAMO,QAI5BC,EAAU,SAAAR,GACZ,OAAO,yBAAKG,UAAWC,IAAQK,SAAUT,EAAMS,UAW3CC,EAAsBC,YAAU,CAAEC,KAAM,kBAAlBD,EATL,SAACX,GACtB,OACE,0BAAMa,SAAUb,EAAMc,cACpB,kBAACC,EAAA,EAAD,CAAOC,UAAU,WAAWT,KAAK,iBAAiBU,YAAY,qBAAqBd,UAAWC,IAAQc,WAAYC,WAAW,IAC7H,6BACA,4BAAQhB,UAAWC,IAAQgB,KAA3B,YAkCSC,EA5BC,SAACrB,GACf,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OACvC,kBAAC,EAAD,CAAazB,GAAIyB,EAAEzB,GAAI0B,IAAKD,EAAEzB,GAAIK,KAAMoB,EAAEpB,UAExCsB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASmB,IAAKG,EAAE7B,QAInF,OACE,yBAAKC,UAAWC,IAAQ4B,SACtB,yBAAK7B,UAAWC,IAAQ6B,cACtB,uCACCT,GAEH,yBAAKrB,UAAWC,IAAQ0B,UACtB,yBAAK3B,UAAWC,IAAQ8B,gBACtB,wCACCL,GAEH,yBAAK1B,UAAWC,IAAQc,YACtB,kBAACR,EAAD,CAAqBG,SAfP,SAACsB,GACrBnC,EAAMoC,YAAYD,EAAOE,uB,+DC/BzBC,EAA6B,SAAChB,GAAD,MAAY,CACzCiB,OAAQjB,EAAMkB,KAAKD,SCcRE,sBACbC,aAboB,SAACpB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAGE,SAACoB,GACxB,MAAO,CACLP,YAAa,SAACC,GACZM,EAASC,YAAmBP,UDPF,SAACQ,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAK/C,MAAMuC,OACT,kBAACM,EAAcE,KAAK/C,OADI,kBAAC,IAAD,CAAUM,GAAI,eAHV,GACX0C,IAAMH,WAOtC,OADqCH,YAAQJ,EAARI,CAAoCI,KCI9DL,CAGbpB","file":"static/js/4.8a109625.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"dialogs_wrapper__2KQfY\",\"dialogsItems\":\"dialogs_dialogsItems__1oy2F\",\"dialog\":\"dialogs_dialog__2oT6c\",\"messages\":\"dialogs_messages__3lqZz\",\"message\":\"dialogs_message__1Id2-\",\"newMessage\":\"dialogs_newMessage__3mJs0\",\"btn\":\"dialogs_btn__GOPAe\"};","import React from 'react';\nimport classes from './dialogs.module.css';\nimport { NavLink } from \"react-router-dom\";\nimport { reduxForm, Field } from 'redux-form';\n\nlet DialogsItem = props => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n    <div className={classes.dialog}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\nlet Message = props => {\n  return <div className={classes.message}>{props.message}</div>;\n};\nconst NewMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field component=\"textarea\" name=\"newMessageBody\" placeholder=\"Write a message...\" className={classes.newMessage} autoFocus={true} />\n      <br />\n      <button className={classes.btn}>Send</button>\n    </form>\n  )\n}\nconst NewMessageReduxForm = reduxForm({ form: \"newMessageBody\" })(NewMessageForm)\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n\n  let dialogsElements = state.dialogs.map(d => (\n    <DialogsItem id={d.id} key={d.id} name={d.name} />\n  ));\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\n  const addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  };\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.dialogsItems}>\n        <h3>Dialogs</h3>\n        {dialogsElements}\n      </div>\n      <div className={classes.messages}>\n        <div className={classes.recentMessages}>\n          <h4>Messages</h4>\n          {messagesElements}\n        </div>\n        <div className={classes.newMessage}>\n          <NewMessageReduxForm onSubmit={addNewMessage} />\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Dialogs;","import { Redirect } from \"react-router-dom\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedAuthRedirectComponent;\n}\n","import React from 'react';\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from '../../hoc/withAuthRedirectComponent';\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n  }\n};\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}