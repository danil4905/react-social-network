{"ast":null,"code":"import _objectSpread from \"/Users/danilkonovalov/Documents/GitHub/react-social-network/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\nconst TOGLE_IS_FETCHING = \"TOGLE_IS_FETCHING\";\nlet initialState = {\n  users: [],\n  pageSize: 9,\n  totalCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return _objectSpread({}, u, {\n              followed: true\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return _objectSpread({}, u, {\n              followed: false\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case SET_USERS:\n      return _objectSpread({}, state, {\n        users: [...action.users]\n      });\n\n    case SET_CURRENT_PAGE:\n      return _objectSpread({}, state, {\n        currentPage: action.currentPage\n      });\n\n    case SET_USERS_TOTAL_COUNT:\n      return _objectSpread({}, state, {\n        totalCount: action.totalCount\n      });\n\n    case TOGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = totalCount => ({\n  type: SET_USERS_TOTAL_COUNT,\n  totalCount\n});\nexport const togleIsFetching = isFetching => ({\n  type: TOGLE_IS_FETCHING,\n  isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/danilkonovalov/Documents/GitHub/react-social-network/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGLE_IS_FETCHING","initialState","users","pageSize","totalCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","follow","unfollow","setUsers","setCurrentPage","setUsersTotalCount","togleIsFetching"],"mappings":";AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,CAFO;AAGjBC,EAAAA,UAAU,EAAE,CAHK;AAIjBC,EAAAA,WAAW,EAAE,CAJI;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAAnB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,MAAL;AACE,+BACKa,KADL;AAEEN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,GAAZ,CAAgBC,CAAC,IAAI;AAC1B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AAC1B,qCAAYF,CAAZ;AAAeG,cAAAA,QAAQ,EAAE;AAAzB;AACD;;AACD,iBAAOH,CAAP;AACD,SALM;AAFT;;AAUF,SAAKhB,QAAL;AACE,+BACKY,KADL;AAEEN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,GAAZ,CAAgBC,CAAC,IAAI;AAC1B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AAC1B,qCAAYF,CAAZ;AAAeG,cAAAA,QAAQ,EAAE;AAAzB;AACD;;AACD,iBAAOH,CAAP;AACD,SALM;AAFT;;AASF,SAAKf,SAAL;AACE,+BACKW,KADL;AAEEN,QAAAA,KAAK,EAAE,CAAC,GAAGO,MAAM,CAACP,KAAX;AAFT;;AAIF,SAAKJ,gBAAL;AACE,+BACKU,KADL;AAEEH,QAAAA,WAAW,EAAEI,MAAM,CAACJ;AAFtB;;AAIF,SAAKN,qBAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,UAAU,EAAEK,MAAM,CAACL;AAFrB;;AAIF,SAAKJ,iBAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAFrB;;AAIF;AACE,aAAOE,KAAP;AA3CJ;AA6CD,CA9CD;;AAgDA,OAAO,MAAMQ,MAAM,GAAGF,MAAM,KAAK;AAAEJ,EAAAA,IAAI,EAAEf,MAAR;AAAgBmB,EAAAA;AAAhB,CAAL,CAArB;AACP,OAAO,MAAMG,QAAQ,GAAGH,MAAM,KAAK;AACjCJ,EAAAA,IAAI,EAAEd,QAD2B;AAEjCkB,EAAAA;AAFiC,CAAL,CAAvB;AAIP,OAAO,MAAMI,QAAQ,GAAGhB,KAAK,KAAK;AAAEQ,EAAAA,IAAI,EAAEb,SAAR;AAAmBK,EAAAA;AAAnB,CAAL,CAAtB;AACP,OAAO,MAAMiB,cAAc,GAAGd,WAAW,KAAK;AAC5CK,EAAAA,IAAI,EAAEZ,gBADsC;AAE5CO,EAAAA;AAF4C,CAAL,CAAlC;AAIP,OAAO,MAAMe,kBAAkB,GAAGhB,UAAU,KAAK;AAC/CM,EAAAA,IAAI,EAAEX,qBADyC;AAE/CK,EAAAA;AAF+C,CAAL,CAArC;AAIP,OAAO,MAAMiB,eAAe,GAAGf,UAAU,KAAK;AAAEI,EAAAA,IAAI,EAAEV,iBAAR;AAA2BM,EAAAA;AAA3B,CAAL,CAAlC;AAEP,eAAeC,YAAf","sourcesContent":["const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\nconst TOGLE_IS_FETCHING = \"TOGLE_IS_FETCHING\";\nlet initialState = {\n  users: [],\n  pageSize: 9,\n  totalCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u, followed: true };\n          }\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u, followed: false };\n          }\n          return u;\n        })\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        users: [...action.users]\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      };\n    case SET_USERS_TOTAL_COUNT:\n      return {\n        ...state,\n        totalCount: action.totalCount\n      };\n    case TOGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => ({ type: FOLLOW, userId });\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({ type: SET_USERS, users });\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = totalCount => ({\n  type: SET_USERS_TOTAL_COUNT,\n  totalCount\n});\nexport const togleIsFetching = isFetching => ({ type: TOGLE_IS_FETCHING, isFetching });\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}