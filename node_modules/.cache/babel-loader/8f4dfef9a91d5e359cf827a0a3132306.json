{"ast":null,"code":"var _jsxFileName = \"/Users/danilkonovalov/Documents/GitHub/react-social-network/src/components/dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport classes from './dialogs.module.css';\nimport { NavLink } from \"react-router-dom\";\nimport { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/state\";\n\nconst DialogsItem = props => {\n  let path = \"/dialogs/\" + props.id;\n  return React.createElement(\"div\", {\n    className: classes.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.name));\n};\n\nconst Message = props => {\n  return React.createElement(\"div\", {\n    className: classes.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.message);\n};\n\nconst Dialogs = props => {\n  let state = props.store.getState().messagesPage;\n  let dialogsElements = state.dialogs.map(d => React.createElement(DialogsItem, {\n    id: d.id,\n    name: d.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n  let messagesElements = state.messages.map(m => React.createElement(Message, {\n    message: m.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n  let newMessageElement = React.createRef();\n\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendMessageCreator());\n  };\n\n  let onNewMessageChange = e => {\n    let body = e.target.value;\n    props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  let newMessageBody = state.newMessageBody;\n  return React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.dialogsItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Dialogs\"), dialogsElements), React.createElement(\"div\", {\n    className: classes.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.recentMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Messages\"), messagesElements), React.createElement(\"div\", {\n    className: classes.newMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    ref: newMessageElement,\n    name: \"newMessage\",\n    value: newMessageBody,\n    onClick: onNewMessageChange,\n    cols: \"30\",\n    rows: \"3\",\n    className: classes.newMessage,\n    placeholder: \"Write a message...\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onSendMessageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Send\"))));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["/Users/danilkonovalov/Documents/GitHub/react-social-network/src/components/dialogs/Dialogs.jsx"],"names":["React","classes","NavLink","updateNewMessageBodyCreator","sendMessageCreator","DialogsItem","props","path","id","dialog","name","Message","message","Dialogs","state","store","getState","messagesPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageElement","createRef","onSendMessageClick","dispatch","onNewMessageChange","e","body","target","value","newMessageBody","wrapper","dialogsItems","recentMessages","newMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,mBAAhE;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,MAAIC,IAAI,GAAG,cAAcD,KAAK,CAACE,EAA/B;AACA,SACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEF,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBD,KAAK,CAACI,IAA1B,CADF,CADF;AAKD,CAPD;;AAQA,MAAMC,OAAO,GAAGL,KAAK,IAAI;AACvB,SAAO;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACW,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCN,KAAK,CAACM,OAAxC,CAAP;AACD,CAFD;;AAKA,MAAMC,OAAO,GAAIP,KAAD,IAAW;AACzB,MAAIQ,KAAK,GAAGR,KAAK,CAACS,KAAN,CAAYC,QAAZ,GAAuBC,YAAnC;AACA,MAAIC,eAAe,GAAGJ,KAAK,CAACK,OAAN,CAAcC,GAAd,CAAkBC,CAAC,IACvC,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAEA,CAAC,CAACb,EAAnB;AAAuB,IAAA,IAAI,EAAEa,CAAC,CAACX,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoB,CAAtB;AAIA,MAAIY,gBAAgB,GAAGR,KAAK,CAACS,QAAN,CAAeH,GAAf,CAAmBI,CAAC,IAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACZ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAAvB;AACA,MAAIa,iBAAiB,GAAGzB,KAAK,CAAC0B,SAAN,EAAxB;;AACA,MAAIC,kBAAkB,GAAG,MAAM;AAC7BrB,IAAAA,KAAK,CAACS,KAAN,CAAYa,QAAZ,CAAqBxB,kBAAkB,EAAvC;AACD,GAFD;;AAGA,MAAIyB,kBAAkB,GAAIC,CAAD,IAAO;AAC9B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACA3B,IAAAA,KAAK,CAACS,KAAN,CAAYa,QAAZ,CAAqBzB,2BAA2B,CAAC4B,IAAD,CAAhD;AACD,GAHD;;AAIA,MAAIG,cAAc,GAAGpB,KAAK,CAACoB,cAA3B;AACA,SACE;AAAK,IAAA,SAAS,EAAEjC,OAAO,CAACkC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAElC,OAAO,CAACmC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGlB,eAFH,CADF,EAKE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACsB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEtB,OAAO,CAACoC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGf,gBAFH,CADF,EAKE;AAAK,IAAA,SAAS,EAAErB,OAAO,CAACqC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEb,iBADP;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,KAAK,EAAES,cAHT;AAIE,IAAA,OAAO,EAAEL,kBAJX;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,IAAI,EAAC,GANP;AAOE,IAAA,SAAS,EAAE5B,OAAO,CAACqC,UAPrB;AAQE,IAAA,WAAW,EAAC,oBARd;AASE,IAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAQ,IAAA,OAAO,EAAEX,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,CALF,CALF,CADF;AA4BD,CA5CD;;AA6CA,eAAed,OAAf","sourcesContent":["import React from 'react';\nimport classes from './dialogs.module.css';\nimport { NavLink } from \"react-router-dom\";\nimport { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/state\";\n\nconst DialogsItem = props => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n    <div className={classes.dialog}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\nconst Message = props => {\n  return <div className={classes.message}>{props.message}</div>;\n};\n\n\nconst Dialogs = (props) => {\n  let state = props.store.getState().messagesPage;\n  let dialogsElements = state.dialogs.map(d => (\n    <DialogsItem id={d.id} name={d.name} />\n  ));\n\n  let messagesElements = state.messages.map(m => <Message message={m.message} />);\n  let newMessageElement = React.createRef();\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendMessageCreator())\n  };\n  let onNewMessageChange = (e) => {\n    let body = e.target.value;\n    props.store.dispatch(updateNewMessageBodyCreator(body))\n  };\n  let newMessageBody = state.newMessageBody;\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.dialogsItems}>\n        <h3>Dialogs</h3>\n        {dialogsElements}\n      </div>\n      <div className={classes.messages}>\n        <div className={classes.recentMessages}>\n          <h4>Messages</h4>\n          {messagesElements}\n        </div>\n        <div className={classes.newMessage}>\n          <textarea\n            ref={newMessageElement}\n            name=\"newMessage\"\n            value={newMessageBody}\n            onClick={onNewMessageChange}\n            cols=\"30\"\n            rows=\"3\"\n            className={classes.newMessage}\n            placeholder=\"Write a message...\"\n            autoFocus></textarea>\n          <br></br>\n          <button onClick={onSendMessageClick}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}