{"ast":null,"code":"var _jsxFileName = \"/Users/danilkonovalov/Documents/GitHub/react-social-network/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/state\";\nimport { BrowserRouter } from \"react-router-dom\";\nexport let rerenderEntireTree = state => {\n  ReactDOM.render(React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(App, {\n    state: store.getState(),\n    addPost: store.addPost(),\n    updateNewPostText: store.updateNewPostText(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), document.getElementById(\"root\"));\n};\nrerenderEntireTree(store.getState());\nstore.subscribe(rerenderEntireTree); // rerendering DOM when use this function","map":{"version":3,"sources":["/Users/danilkonovalov/Documents/GitHub/react-social-network/src/index.js"],"names":["React","ReactDOM","App","store","BrowserRouter","rerenderEntireTree","state","render","getState","addPost","updateNewPostText","document","getElementById","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,IAAIC,kBAAkB,GAAGC,KAAK,IAAI;AACvCL,EAAAA,QAAQ,CAACM,MAAT,CACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAEJ,KAAK,CAACK,QAAN,EADT;AAEE,IAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,EAFX;AAGE,IAAA,iBAAiB,EAAEN,KAAK,CAACO,iBAAN,EAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF;AAUD,CAXM;AAYPP,kBAAkB,CAACF,KAAK,CAACK,QAAN,EAAD,CAAlB;AACAL,KAAK,CAACU,SAAN,CAAgBR,kBAAhB,E,CACA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/state\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nexport let rerenderEntireTree = state => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App\n        state={store.getState()}\n        addPost={store.addPost()}\n        updateNewPostText={store.updateNewPostText()}\n      />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n};\nrerenderEntireTree(store.getState());\nstore.subscribe(rerenderEntireTree);\n// rerendering DOM when use this function\n"]},"metadata":{},"sourceType":"module"}