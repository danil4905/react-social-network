{"ast":null,"code":"var _jsxFileName = \"/Users/danilkonovalov/Documents/GitHub/react-social-network/src/components/newUsers/NewUsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC } from '../../redux/users-reducer';\nimport Axios from 'axios';\nimport Users from './Users';\n\nclass NewUsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(Response => {\n        this.props.setUsers(Response.data.items);\n      });\n    };\n  }\n\n  componentDidMount(props) {\n    Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(Response => {\n      this.props.setUsers(Response.data.items);\n      this.props.setUsersTotalCount(Math.ceil(Response.data.totalCount / 10));\n    });\n  }\n\n  render() {\n    return React.createElement(Users, {\n      onPageChanged: this.onPageChanged,\n      currentPage: this.props.currentPage,\n      pageSize: this.props.pageSize,\n      totalCount: this.props.totalCount,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalCount: state.usersPage.totalCount,\n    currentPage: state.usersPage.currentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: currentPage => {\n      dispatch(setCurrentPageAC(currentPage));\n    },\n    setUsersTotalCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUsersContainer);","map":{"version":3,"sources":["/Users/danilkonovalov/Documents/GitHub/react-social-network/src/components/newUsers/NewUsersContainer.jsx"],"names":["React","connect","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","Axios","Users","NewUsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","Response","setUsers","data","items","componentDidMount","currentPage","setUsersTotalCount","Math","ceil","totalCount","render","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC } from '../../redux/users-reducer';\nimport Axios from 'axios';\nimport Users from './Users';\n\nclass NewUsersContainer extends React.Component {\n\n    componentDidMount(props) {\n        Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(Response => {\n            this.props.setUsers(Response.data.items);\n            this.props.setUsersTotalCount(Math.ceil(Response.data.totalCount / 10));\n\n        })\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(Response => {\n            this.props.setUsers(Response.data.items);\n        })\n    }\n    render() {\n        return (<Users onPageChanged={this.onPageChanged}\n            currentPage={this.props.currentPage}\n            pageSize={this.props.pageSize}\n            totalCount={this.props.totalCount}\n            users={this.props.users}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow} />);\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalCount: state.usersPage.totalCount,\n        currentPage: state.usersPage.currentPage\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId))\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage: (currentPage) => {\n            dispatch(setCurrentPageAC(currentPage));\n        },\n        setUsersTotalCount: (totalCount) => {\n            dispatch(setUsersTotalCountAC(totalCount));\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUsersContainer);"]},"metadata":{},"sourceType":"module"}