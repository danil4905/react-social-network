{"ast":null,"code":"import { profileReducer } from \"./profile-reducer\";\nimport { dialogsReducer } from \"./dialogs-reducer\";\nimport { sidebarReducer } from \"./sidebar-reducer\";\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"Hello buddy!\",\n        likesCounts: 12\n      }, {\n        id: 2,\n        message: \"What is your name?\",\n        likesCounts: 12\n      }],\n      newPostText: \"Hello\"\n    },\n    messagesPage: {\n      dialogs: [{\n        id: 1,\n        name: \"Natalya\"\n      }, {\n        id: 2,\n        name: \"Rudick\"\n      }, {\n        id: 3,\n        name: \"Denis\"\n      }, {\n        id: 4,\n        name: \"David\"\n      }, {\n        id: 5,\n        name: \"Rojer\"\n      }, {\n        id: 6,\n        name: \"Max\"\n      }],\n      messages: [{\n        id: 1,\n        message: \"Yo!\"\n      }, {\n        id: 2,\n        message: \"Hello my friend\"\n      }, {\n        id: 3,\n        message: \"How are you?\"\n      }, {\n        id: 4,\n        message: \"I am Ok\"\n      }],\n      newMessageBody: ''\n    },\n    sidebarPage: {}\n  },\n\n  _callSubscriber() {\n    console.log(\"State changed\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer(this._state.profilePage, action);\n    this._state.messagesPage = dialogsReducer(this._state.messagesPage, action);\n    this._state.sidebarPage = sidebarReducer(this._state.sidebarPage, action);\n\n    this._callSubscriber(this._state);\n  }\n\n};\nexport default store;\nwindow.store = store; // file with Data (BLL)","map":{"version":3,"sources":["/Users/danilkonovalov/Documents/GitHub/react-social-network/src/redux/store.js"],"names":["profileReducer","dialogsReducer","sidebarReducer","store","_state","profilePage","posts","id","message","likesCounts","newPostText","messagesPage","dialogs","name","messages","newMessageBody","sidebarPage","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","window"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,mBAA7B;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAE;AACXC,MAAAA,KAAK,EAAE,CACL;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,cAAlB;AAAkCC,QAAAA,WAAW,EAAE;AAA/C,OADK,EAEL;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,oBAAlB;AAAwCC,QAAAA,WAAW,EAAE;AAArD,OAFK,CADI;AAKXC,MAAAA,WAAW,EAAE;AALF,KADP;AAQNC,IAAAA,YAAY,EAAE;AACZC,MAAAA,OAAO,EAAE,CACP;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OADO,EAEP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OAFO,EAGP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OAHO,EAIP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OAJO,EAKP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OALO,EAMP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OANO,CADG;AASZC,MAAAA,QAAQ,EAAE,CACR;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAJQ,CATE;AAeZO,MAAAA,cAAc,EAAE;AAfJ,KARR;AAyBNC,IAAAA,WAAW,EAAE;AAzBP,GADE;;AA4BVC,EAAAA,eAAe,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GA9BS;;AAgCVC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKhB,MAAZ;AACD,GAlCS;;AAmCViB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,SAAKL,eAAL,GAAuBK,QAAvB;AACD,GArCS;;AAuCVC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACf,SAAKpB,MAAL,CAAYC,WAAZ,GAA0BL,cAAc,CAAC,KAAKI,MAAL,CAAYC,WAAb,EAA0BmB,MAA1B,CAAxC;AACA,SAAKpB,MAAL,CAAYO,YAAZ,GAA2BV,cAAc,CAAC,KAAKG,MAAL,CAAYO,YAAb,EAA2Ba,MAA3B,CAAzC;AACA,SAAKpB,MAAL,CAAYY,WAAZ,GAA0Bd,cAAc,CAAC,KAAKE,MAAL,CAAYY,WAAb,EAA0BQ,MAA1B,CAAxC;;AACA,SAAKP,eAAL,CAAqB,KAAKb,MAA1B;AACH;;AA5CW,CAAZ;AA8CA,eAAeD,KAAf;AACAsB,MAAM,CAACtB,KAAP,GAAeA,KAAf,C,CACA","sourcesContent":["import {profileReducer} from \"./profile-reducer\";\nimport {dialogsReducer} from \"./dialogs-reducer\";\nimport {sidebarReducer} from \"./sidebar-reducer\";\n\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [\n        { id: 1, message: \"Hello buddy!\", likesCounts: 12 },\n        { id: 2, message: \"What is your name?\", likesCounts: 12 }\n      ],\n      newPostText: \"Hello\"\n    },\n    messagesPage: {\n      dialogs: [\n        { id: 1, name: \"Natalya\" },\n        { id: 2, name: \"Rudick\" },\n        { id: 3, name: \"Denis\" },\n        { id: 4, name: \"David\" },\n        { id: 5, name: \"Rojer\" },\n        { id: 6, name: \"Max\" }\n      ],\n      messages: [\n        { id: 1, message: \"Yo!\" },\n        { id: 2, message: \"Hello my friend\" },\n        { id: 3, message: \"How are you?\" },\n        { id: 4, message: \"I am Ok\" }\n      ],\n      newMessageBody: ''\n    },\n    sidebarPage: {}\n  },\n  _callSubscriber() {\n    console.log(\"State changed\");\n  },\n\n  getState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer(this._state.profilePage, action);\n    this._state.messagesPage = dialogsReducer(this._state.messagesPage, action);\n    this._state.sidebarPage = sidebarReducer(this._state.sidebarPage, action);\n    this._callSubscriber(this._state);\n}};\n\nexport default store;\nwindow.store = store;\n// file with Data (BLL)\n"]},"metadata":{},"sourceType":"module"}