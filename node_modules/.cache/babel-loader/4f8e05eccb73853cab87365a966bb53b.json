{"ast":null,"code":"var _jsxFileName = \"/Users/danilkonovalov/Documents/GitHub/react-social-network/src/components/newUsers/NewUsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setUsersTotalCount, togleIsFetching } from '../../redux/users-reducer';\nimport Axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\n\nclass NewUsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.togleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(Response => {\n        this.props.togleIsFetching(false);\n        this.props.setUsers(Response.data.items);\n      });\n    };\n  }\n\n  componentDidMount(props) {\n    this.props.togleIsFetching(true);\n    Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(Response => {\n      this.props.setUsers(Response.data.items);\n      this.props.setUsersTotalCount(Math.ceil(Response.data.totalCount / 10));\n      this.props.togleIsFetching(false);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      onPageChanged: this.onPageChanged,\n      currentPage: this.props.currentPage,\n      pageSize: this.props.pageSize,\n      totalCount: this.props.totalCount,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalCount: state.usersPage.totalCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setUsersTotalCount,\n  togleIsFetching\n})(NewUsersContainer);","map":{"version":3,"sources":["/Users/danilkonovalov/Documents/GitHub/react-social-network/src/components/newUsers/NewUsersContainer.jsx"],"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setUsersTotalCount","togleIsFetching","Axios","Users","Preloader","NewUsersContainer","Component","onPageChanged","pageNumber","props","get","pageSize","then","Response","data","items","componentDidMount","currentPage","Math","ceil","totalCount","render","isFetching","users","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,cAArC,EAAqDC,kBAArD,EAAyEC,eAAzE,QAAgG,2BAAhG;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AACA,MAAMC,iBAAN,SAAgCX,KAAK,CAACY,SAAtC,CAAgD;AAAA;AAAA;;AAAA,SAU5CC,aAV4C,GAU3BC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWR,eAAX,CAA2B,IAA3B;AACA,WAAKQ,KAAL,CAAWV,cAAX,CAA0BS,UAA1B;AACAN,MAAAA,KAAK,CAACQ,GAAN,CAAW,2DAA0DF,UAAW,UAAS,KAAKC,KAAL,CAAWE,QAAS,EAA7G,EAAgHC,IAAhH,CAAqHC,QAAQ,IAAI;AAC7H,aAAKJ,KAAL,CAAWR,eAAX,CAA2B,KAA3B;AACA,aAAKQ,KAAL,CAAWX,QAAX,CAAoBe,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AAEH,OAJD;AAKH,KAlB2C;AAAA;;AAE5CC,EAAAA,iBAAiB,CAACP,KAAD,EAAQ;AACrB,SAAKA,KAAL,CAAWR,eAAX,CAA2B,IAA3B;AACAC,IAAAA,KAAK,CAACQ,GAAN,CAAW,2DAA0D,KAAKD,KAAL,CAAWQ,WAAY,UAAS,KAAKR,KAAL,CAAWE,QAAS,EAAzH,EAA4HC,IAA5H,CAAiIC,QAAQ,IAAI;AACzI,WAAKJ,KAAL,CAAWX,QAAX,CAAoBe,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACA,WAAKN,KAAL,CAAWT,kBAAX,CAA8BkB,IAAI,CAACC,IAAL,CAAUN,QAAQ,CAACC,IAAT,CAAcM,UAAd,GAA2B,EAArC,CAA9B;AACA,WAAKX,KAAL,CAAWR,eAAX,CAA2B,KAA3B;AACH,KAJD;AAKH;;AAUDoB,EAAAA,MAAM,GAAG;AACL,WAAO,0CACF,KAAKZ,KAAL,CAAWa,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IADtC,EAEH,oBAAC,KAAD;AAAO,MAAA,aAAa,EAAE,KAAKf,aAA3B;AACI,MAAA,WAAW,EAAE,KAAKE,KAAL,CAAWQ,WAD5B;AAEI,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWE,QAFzB;AAGI,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWW,UAH3B;AAII,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWc,KAJtB;AAKI,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWb,MALvB;AAMI,MAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWZ,QANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAUH;;AA9B2C;;AAgChD,MAAM2B,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHZ,IAAAA,QAAQ,EAAEc,KAAK,CAACC,SAAN,CAAgBf,QAFvB;AAGHS,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN,UAHzB;AAIHH,IAAAA,WAAW,EAAEQ,KAAK,CAACC,SAAN,CAAgBT,WAJ1B;AAKHK,IAAAA,UAAU,EAAEG,KAAK,CAACC,SAAN,CAAgBJ;AALzB,GAAP;AAOH,CARD;;AAUA,eAAe3B,OAAO,CAAC6B,eAAD,EAAiB;AAAE5B,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA,cAA9B;AAA8CC,EAAAA,kBAA9C;AAAkEC,EAAAA;AAAlE,CAAjB,CAAP,CAA6GI,iBAA7G,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setUsersTotalCount, togleIsFetching } from '../../redux/users-reducer';\nimport Axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nclass NewUsersContainer extends React.Component {\n\n    componentDidMount(props) {\n        this.props.togleIsFetching(true);\n        Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(Response => {\n            this.props.setUsers(Response.data.items);\n            this.props.setUsersTotalCount(Math.ceil(Response.data.totalCount / 10));\n            this.props.togleIsFetching(false);\n        })\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.togleIsFetching(true);\n        this.props.setCurrentPage(pageNumber);\n        Axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(Response => {\n            this.props.togleIsFetching(false);\n            this.props.setUsers(Response.data.items);\n\n        })\n    }\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader /> : null}\n            <Users onPageChanged={this.onPageChanged}\n                currentPage={this.props.currentPage}\n                pageSize={this.props.pageSize}\n                totalCount={this.props.totalCount}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow} />\n        </>\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalCount: state.usersPage.totalCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\nexport default connect(mapStateToProps,{ follow, unfollow, setUsers, setCurrentPage, setUsersTotalCount, togleIsFetching })(NewUsersContainer);"]},"metadata":{},"sourceType":"module"}